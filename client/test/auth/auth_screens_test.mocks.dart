// Mocks generated by Mockito 5.4.6 from annotations
// in client/test/auth/auth_screens_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:ui' as _i6;

import 'package:client/models/auth.dart' as _i3;
import 'package:client/providers/auth_provider.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

/// A class which mocks [AuthProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthProvider extends _i1.Mock implements _i2.AuthProvider {
  MockAuthProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.AuthState get authState =>
      (super.noSuchMethod(
            Invocation.getter(#authState),
            returnValue: _i3.AuthState.initial,
          )
          as _i3.AuthState);

  @override
  bool get isLoading =>
      (super.noSuchMethod(Invocation.getter(#isLoading), returnValue: false)
          as bool);

  @override
  bool get isAuthenticated =>
      (super.noSuchMethod(
            Invocation.getter(#isAuthenticated),
            returnValue: false,
          )
          as bool);

  @override
  bool get isUnauthenticated =>
      (super.noSuchMethod(
            Invocation.getter(#isUnauthenticated),
            returnValue: false,
          )
          as bool);

  @override
  String get userDisplayName =>
      (super.noSuchMethod(
            Invocation.getter(#userDisplayName),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.getter(#userDisplayName),
            ),
          )
          as String);

  @override
  String get userInitials =>
      (super.noSuchMethod(
            Invocation.getter(#userInitials),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.getter(#userInitials),
            ),
          )
          as String);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i5.Future<void> initialize() =>
      (super.noSuchMethod(
            Invocation.method(#initialize, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<bool> register({
    required String? name,
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#register, [], {
              #name: name,
              #email: email,
              #password: password,
            }),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<bool> signIn({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signIn, [], {
              #email: email,
              #password: password,
            }),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<void> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> refreshUser() =>
      (super.noSuchMethod(
            Invocation.method(#refreshUser, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  void clearError() => super.noSuchMethod(
    Invocation.method(#clearError, []),
    returnValueForMissingStub: null,
  );

  @override
  bool hasErrorType(_i3.AuthErrorType? type) =>
      (super.noSuchMethod(
            Invocation.method(#hasErrorType, [type]),
            returnValue: false,
          )
          as bool);

  @override
  Map<String, String?> validateRegistrationForm({
    required String? name,
    required String? email,
    required String? password,
    required String? confirmPassword,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#validateRegistrationForm, [], {
              #name: name,
              #email: email,
              #password: password,
              #confirmPassword: confirmPassword,
            }),
            returnValue: <String, String?>{},
          )
          as Map<String, String?>);

  @override
  Map<String, String?> validateSignInForm({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#validateSignInForm, [], {
              #email: email,
              #password: password,
            }),
            returnValue: <String, String?>{},
          )
          as Map<String, String?>);

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}
